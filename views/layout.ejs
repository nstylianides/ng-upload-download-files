<!DOCTYPE html>
<html ng-app="files">
  <head>
    <title>New Sails App</title>
      <base href="/">
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/angular-csp.css">
    <link rel="stylesheet" href="/styles/angular-toastr.css">
    <link rel="stylesheet" href="/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/ui-bootstrap-csp.css">
    <link rel="stylesheet" href="/styles/xeditable.css">
    <!--STYLES END-->
      <style>
          .button {
              -moz-appearance: button;
              /* Firefox */
              -webkit-appearance: button;
              /* Safari and Chrome */
              padding: 10px;
              margin: 10px;
              width: 70px;
          }
          .drop-box {
              background: #F8F8F8;
              border: 5px dashed #DDD;
              width: 200px;
              height: 65px;
              text-align: center;
              padding-top: 25px;
              margin: 10px;
          }
          .dragover {
              border: 5px dashed blue;
          }
      </style>
  </head>

  <body>
  <div ng-controller="FileCtrl">
    <%- body %>
    </div>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

  <!--SCRIPTS-->
  <script src="/js/dependencies/angular.js"></script>
  <script src="/js/dependencies/jquery.js"></script>
  <script src="/js/dependencies/angular-animate.js"></script>
  <script src="/js/dependencies/angular-cookies.js"></script>
  <script src="/js/dependencies/angular-resource.js"></script>
  <script src="/js/dependencies/angular-toastr.js"></script>
  <script src="/js/dependencies/angular-toastr.tpls.js"></script>
  <script src="/js/dependencies/angular-touch.js"></script>
  <script src="/js/dependencies/angular-ui-router.js"></script>
  <script src="/js/dependencies/b64.js"></script>
  <script src="/js/dependencies/bootstrap.js"></script>
  <script src="/js/dependencies/bsDropdown.min.js"></script>
  <script src="/js/dependencies/ng-file-upload.js"></script>
  <script src="/js/dependencies/sails.io.js"></script>
  <script src="/js/dependencies/smart-table.js"></script>
  <script src="/js/dependencies/ui-bootstrap-tpls.js"></script>
  <script src="/js/dependencies/ui-bootstrap.js"></script>
  <script src="/js/dependencies/xeditable.min.js"></script>
  <script src="/js/app.js"></script>
  <script src="/js/config.js"></script>
  <script src="/js/controllers/FileCtrl.js"></script>
  <!--SCRIPTS END-->
  </body>
</html>
